server {
    set $welcome "hello";

    listen  80;
    server_name  "example.com";

    # 如果请求的主机名不是$server_name 直接500
    if ($host != $server_name) {
        return 500;
    }

    # http 跳转到 https
    rewrite  "^/(.*)$" https://$server_name/$1;
}

# https 反向代理(URL路由)
server {
    listen       443 ssl;
    server_name  "example.com";

    access_log  /var/log/nginx/rproxy-access.log;
    error_log  /var/log/nginx/rproxy-error.log;

    # 证书和私钥
    ssl_certificate key/cert.pem;
    ssl_certificate_key key/privkey.pem;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # 如果请求的主机名不是$server_name 直接500
    if ($host != $server_name) {
        return 500;
    }

    # 支流1 /take/off或/fuck/off  '~' 表示启用正则表达式
    location ~ /(take|fuck)/off {
        proxy_redirect off;
        proxy_pass http://127.0.0.1:10086; #转发==>支流1服务器
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;

        # 头部设置真实的客户端地址    真实IP: c --> nginx 的源地址
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 支流2 '/' 默认路由
    location / {
        proxy_redirect off;
        proxy_pass http://127.0.0.1:23380; #转发==>支流2服务器
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;

        # 头部设置真实的客户端地址    真实IP: c --> nginx 的源地址
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    #error_page  404              /404.html;
}

